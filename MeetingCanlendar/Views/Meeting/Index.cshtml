@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id='calendar'></div>
<div class='calendarList'></div>
<input id="userId" value="@User.Identity.Name" type="hidden" />
<script src="@Url.Content("~/Scripts/jquery.signalR-2.1.2.min.js")"></script>
<script src="@Url.Content("~/signalr/hubs")"></script>
@section scripts{
    <script type="text/javascript">
        var currentLangCode = 'zh-cn';
        var currentDate = new Date();
        var initEvents = [];
        var positionsJSON = [];
        var prevClickEvent = null;
        var showAll = true;
        var loadedMonth = [];
        var dragingEventStart;

        $(document).ready(function () {

            $.ajax({
                url: 'meeting/GetMeetingPositions',
                type: 'POST',
                dateType: 'json',
                async: false
            }).done(function (result) {
                positionsJSON = result;
            });


            $('#calendar').fullCalendar({
                header: {
                    left: 'today',
                    center: 'prev title next',
                    right: 'month,agendaWeek,agendaDay'
                },
                lang: currentLangCode,
                isRTL: false,
                selectable: true,
                selectHelper: true,
                weekNumbers: false,
                editable: true,
                firstDay: 1,
                unselectAuto: false,
                slotEventOverlap: false,
                slotDuration: '00:30:00',
                snapDuration: '00:15:00',
                eventLimit: true,
                eventLimitText: '更多...',
                aspectRatio: 0,
                loading: function (bool) {
                    $('#loading').toggle(bool);
                },
                windowResize: function(view) {
                    var eventListCnt = $('#meeting-list .ml-list');

                    var viewType = view.name;

                    if (viewType == 'agendaDay') {
                        eventListCnt.css('height', $($('.fc-view')[1]).outerHeight() - $('.calendar-list-header').outerHeight() - 40);
                    } else {
                        eventListCnt.css('height', $('.fc-view').outerHeight() - 40);
                    }
                },
                select: function (start, end, jsEvent, view) {
                    if (view.name == "month") {
                        EventEditPanel({ start: start.add('hour', 7) }, jsEvent);
                    } else {
                        EventEditPanel({ start: start, end: end }, jsEvent);
                    }
                },
                eventClick: function (calEvent, jsEvent, view) {
                    $('.ml-list .ml-li').removeClass('selected');
                    $('.fc-event-container').find('.fc-event').removeClass('fc-event-selected');
                    $('#fc-event-' + calEvent.id).addClass('fc-event-selected');
                    $('#ml-li-' + calEvent.id).addClass('selected');
                    EventEditPanel(calEvent, jsEvent);
                },
                eventDragStart: function (event, jsEvent, ui, view) {
                    dragingEventStart = $.extend({}, event);
                },
                eventDrop: function (event, jsEvent, ui, view) {
                    meetingHub.server.addMeeting($('#userId').val(), ConvertEventToMeetingData(event));
                },
                eventResize: function (event, jsEvent, ui, view) {
                    meetingHub.server.addMeeting($('#userId').val(), ConvertEventToMeetingData(event));
                },
                eventRender: function (event, element, view) {
                    if (!event.isMine && !showAll) {
                        return false;
                    }
                },
                eventAfterAllRender: function (view) {
                    var events = $('#calendar').fullCalendar('clientEvents');
                    var eventsToShow = new Array();
                    var viewStartTime = view.start;
                    var viewEndTime = view.end;

                    $.each(events, function (i, event) {
                        if (event.isMine || showAll) {
                            if (event.start >= viewStartTime && event.start <= viewEndTime) {
                                eventsToShow.push(event);
                            }
                        }
                    });

                    SortData(eventsToShow, "start");

                    var meetingList = CreateMeetingList(eventsToShow, view.name);

                    if (view.name == "month") {
                        meetingList.prependTo('.fc-view-container');
                    } else if (view.name == 'agendaWeek') {
                        meetingList.prependTo('.fc-view-container');
                    } else {
                        meetingList.prependTo('.calendar-list-content');
                    }
                },
                viewRender: function (view, element) {
                    var currentSelDate = view.intervalStart.clone();
                    LoadMeetings(currentSelDate);

                    if (view.name == "month") {
                        $('#calendarList').remove();

                        $('.fc-view').removeClass('fc-agendaDay');
                        $('.fc-icon-left-single-arrow').text('上月');
                        $('.fc-icon-right-single-arrow').text('下月');

                    } else if (view.name == 'agendaWeek') {
                        $('#calendarList').remove();

                        $('.fc-view').removeClass('fc-agendaDay');
                        $('.fc-icon-left-single-arrow').text('上周');
                        $('.fc-icon-right-single-arrow').text('下周');
                    } else if (view.name == 'agendaDay') {

                        if ($('#calendarList').length == 0) {
                            ShowSmallCanlendar(view.intervalStart);
                        }

                        SetSmallCanlendarValue(view.intervalStart);
                        $('.fc-icon-left-single-arrow').text('昨天');
                        $('.fc-icon-right-single-arrow').text('明天');
                    }
                }
            });
        });

        //同时加载前一个月与后一个月的数据
        function LoadMeetings(startDate) {
            var needLoadDataMonth = [];
            var loadPrevMonthData = true;
            var loadCurtMonthData = true;
            var loadNextMonthData = true;
            var curtMonth = startDate.format('YYYY-MM-01');
            var prevMonth = startDate.add('month', -1).format('YYYY-MM-01');
            var nextMonth = startDate.add('month', 2).format('YYYY-MM-01');

            //如果要加载会议数据的日期已经存在[已加载数组]中，那么就不用再去获取数据
            $.each(loadedMonth, function (i, val) {
                if (prevMonth == val) {
                    loadPrevMonthData = false;
                }

                if (curtMonth == val) {
                    loadCurtMonthData = false;
                }

                if (nextMonth == val) {
                    loadNextMonthData = false;
                }
            });

            if (loadPrevMonthData) {
                needLoadDataMonth.push(prevMonth);
                loadedMonth.push(prevMonth);
            }

            if (loadCurtMonthData) {
                needLoadDataMonth.push(curtMonth);
                loadedMonth.push(curtMonth);
            }

            if (loadNextMonthData) {
                needLoadDataMonth.push(nextMonth);
                loadedMonth.push(nextMonth);
            }

            if (needLoadDataMonth.length != 0) {
                initEvents = GetMeetings(needLoadDataMonth);
                $('#calendar').fullCalendar('addEventSource', initEvents);
            }
        }

        function GetMeetings(months) {
            var dataResult;
            $.ajax({
                url: 'meeting/GetMeetingsByMonths',
                type: 'POST',
                dateType: 'json',
                async: false,
                data: { 'months': JSON.stringify(months) }
            }).done(function (reuslt) {
                dataResult = reuslt;
            });

            return dataResult;
        }

        function CreateMeetingList(events, viewType) {
            $('#meeting-list').remove();

            var eventList = $('<div id="meeting-list" />');
            var eventListUl = $('<ul class="ml-ul" />');
            var dateSpUl = eventListUl;
            var tick = 1;
            var lastDate = "";

            $.each(events, function (index, event) {
                var dateTime;
                var startTime = event.start.format('YYYY-M-D');

                if (viewType != 'agendaDay' && startTime != lastDate) {
                    lastDate = startTime;

                    var spLi = $('<li class="ml-li-sp selected" type="show" />').append('<span>' + lastDate + '</span>');

                    spLi.click(function () {
                        if ($(this).attr('type') == 'hide') {
                            $(this).attr('type', 'show').addClass('selected');
                            $(this).next().slideDown(200);
                        }
                        else {
                            $(this).attr('type', 'hide').removeClass('selected');
                            $(this).next().slideUp(200);
                        }           
                    });
                    eventListUl.append(spLi);

                    dateSpUl = $('<ul class="ml-ul-dt" />');
                    var dtLi = $('<li class="ml-li-dt" />').append(dateSpUl);
                    eventListUl.append(dtLi);
                }

                dateTime = event.start.format('Ah:m') + ' 到 ' + event.end.format('Ah:m');

                var eveLi = $('<li class="ml-li' + (event.isMine ? ' mine' : ' all') + (tick % 2 == 0 ? ' li-even' : '') + '" id="ml-li-' + event.id + '" />')
                .append('<span class="ml-title">' + event.title + '</span><span class="ml-time">' + dateTime + '</span><div class="clear"/>');

                eveLi.click(function () {
                    $('#editPanel').remove();
                    eventListUl.find('li.ml-li').removeClass('selected');
                    $(this).addClass('selected');

                    $('#calendar').find('.fc-event').removeClass('fc-event-selected');
                    $('#calendar').find('#fc-event-' + event.id).addClass('fc-event-selected');
                }).dblclick(function (jsEvent) {
                    EventEditPanel(event, jsEvent);
                });

                dateSpUl.append(eveLi);
                tick++;
            });

            eventListUl.find('.ml-li-sp:first-child').css('margin-top', 0);
            var eventListCnt = $('<div class="ml-list"/>');
            if (viewType == 'agendaDay') {
                eventListCnt.css('height', $($('.fc-view')[1]).outerHeight() - $('.calendar-list-header').outerHeight() - 40);
            } else {
                eventListCnt.css('height', $('.fc-view').outerHeight() - 40);
            }
            eventListCnt.append(eventListUl);

            var menu = $('<div class="ml-menu" />');
            var menuAll = $('<span class="menu-catg menu-catg-all">所有</span>');
            var menuMine = $('<span class="menu-catg menu-catg-mine">我的</span>');

            if (showAll) {
                menuAll.addClass('menu-catg-selected');
            } else {
                menuMine.addClass('menu-catg-selected');
            }

            menuAll.click(function () {
                $(this).addClass('menu-catg-selected').next().removeClass('menu-catg-selected');
                showAll = true;
                $('#calendar').fullCalendar('rerenderEvents');
            });

            menuMine.click(function () {
                $(this).addClass('menu-catg-selected').prev().removeClass('menu-catg-selected');
                showAll = false;
                $('#calendar').fullCalendar('rerenderEvents');
            });

            menu.append(menuAll).append(menuMine).appendTo(eventList);

            eventList.append(eventListCnt);
            return eventList;
        }

        function ShowSmallCanlendar(defaultDate) {
            $('.fc-view').addClass('fc-agendaDay');
            var calendarLsit = $('.calendarList').clone();

            calendarLsit.attr('id', 'calendarList')
			.append('<div class="calendar-list-header">'
			+ '<div class="currentDayDetail"><div class="cdt-day"></div>'
			+ '<div class="cdt-date"></div></div>'
			+ '<div class="smallCanlendar"></div><div class="clear"></div></div>')
			.append('<div class="calendar-list-content"></div>');

            calendarLsit.insertBefore('.fc-view');
            $('.smallCanlendar').fullCalendar({
                lang: currentLangCode,
                weekNumbers: false,
                firstDay: 1,
                defaultDate: defaultDate,
                header: false,
                contentHeight: 'auto',
                dayClick: function (date, jsEvent, view) {
                    $('#calendar').fullCalendar('gotoDate', date);
                    $('.smallCanlendar').fullCalendar('select', date);
                }
            });
        }

        function SetSmallCanlendarValue(currentSelDate) {
            $('#calendarList').find('.cdt-day').text(currentSelDate.format('D'));
            $('#calendarList').find('.cdt-date').text(currentSelDate.format('YYYY年M月D日 星期dd'));
            $('.smallCanlendar').fullCalendar('select', currentSelDate, currentSelDate);
        }

        var meetingHub = $.connection.meetingHub;
        
        meetingHub.client.broadcastMeetingEdit = function (result) {
            if (result.type == 0) {
                $('#calendar').fullCalendar('unselect');
                alert(result.msg);
                if (dragingEventStart != null && dragingEventStart != undefined) {
                    UpdateCalendarEvent(dragingEventStart.id, dragingEventStart);
                }
            } else if (result.type == 1 || result.type == 2) {
                if (result.type == 1) {//新建
                    $('#calendar').fullCalendar('renderEvent', result.data, true);
                } else {//编辑
                    UpdateCalendarEvent(result.data.id, result.data);
                }

                $('#calendar').fullCalendar('unselect');
            }

            dragingEventStart = null;
        }

        meetingHub.client.broadcastMeetingDelete = function (result) {
            if (result.type == 0) {
                alert(result.msg);
            } else if (result.type == 1) {
                $('#calendar').fullCalendar('removeEvents', result.data.id);
            }
        }
        
        function UpdateCalendarEvent(eventId, newData) {
            var currentEvent = $('#calendar').fullCalendar('clientEvents', eventId);

            $.each(currentEvent, function (i, event) {
                event.title = newData.title;
                event.start = newData.start;
                event.end = newData.end;
                event.position = newData.position;
                event.memo = newData.memo;
                event.level = newData.level;
                event.people = newData.people;

                $('#calendar').fullCalendar('updateEvent', event);
            });
        }

        function EventEditPanel(curEvent, jsEvent) {
            $('body').editPanel('destroy');
            var eventStartTime = curEvent.start ? curEvent.start.clone() : moment();

            $('body').editPanel({
                id: curEvent.id,
                title: curEvent.title,
                position: curEvent.position,
                people: curEvent.people,
                start: eventStartTime,
                level: curEvent.level,
                memo: curEvent.memo,
                end: curEvent.end ? curEvent.end.clone() : eventStartTime.clone().add('hours', 1),
                jsEvent: jsEvent,
                titleColor: curEvent.isMine || curEvent.id === undefined ? '#27AE60' : '#34AADC',
                positions: positionsJSON,
                editable: curEvent.editable || curEvent.id === undefined ? true : false,
                submit: function (e, data) {
                    var source = ConvertEventToMeetingData(data);
                    meetingHub.server.addMeeting($('#userId').val(), source);
                    //UpdateMeeting(curEvent, source);
                },
                remove: function (e, data) {
                    meetingHub.server.deleteMeeting($('#userId').val(), data.id);
                },
                close: function (e, data) {
                    $('#ml-li-' + data.id).removeClass('selected'); 
                    $('.fc-event-container').find('.fc-event').removeClass('fc-event-selected');
                    $('#calendar').fullCalendar('unselect');
                }
            });
        }

        function UpdateMeeting(curEvent, source) {
            $.post('/meeting/EditMeeting', { 'source': JSON.stringify(source) },
                function (result) {
                    if (result.type == 0) {
                        $('#calendar').fullCalendar('unselect');
                        alert(result.msg);
                    } else if (result.type == 1) {
                        if (source.id == -1) {
                            $('#calendar').fullCalendar('renderEvent', result.data, true);
                        } else {
                            curEvent.title = result.data.title;
                            curEvent.start = result.data.start;
                            curEvent.end = result.data.end;
                            curEvent.position = result.data.position;
                            curEvent.memo = result.data.memo;
                            curEvent.level = result.data.level;
                            curEvent.people = result.data.people;

                            $('#calendar').fullCalendar('updateEvent', curEvent);
                        }

                        $('#calendar').fullCalendar('unselect');
                    }
                }
            );
        }

        function ConvertEventToMeetingData(data) {
            return {
                'id': (data.id ? data.id : -1),
                'mi_title': data.title,
                'mi_position_id': data.position,
                'mi_start_time': data.start.format('YYYY-MM-DD HH:mm'),
                'mi_end_time': data.end.format('YYYY-MM-DD HH:mm'),
                'mi_level_id': data.level,
                'mi_people': data.people,
                'mi_memo': data.memo
            };
        }

        function SortData(datas, field, type) {
            SortFun.field = field;
            datas.sort(SortFun);
            if (type == "down") {
                datas.reverse();
            }
        }

        function SortFun(data1, data2) {
            if (data1[SortFun.field] > data2[SortFun.field]) {
                return 1;
            }
            else if (data1[SortFun.field] < data2[SortFun.field]) {
                return -1;
            }
            return 0;
        }

        $.connection.hub.start({ transport: ['webSockets', 'longPolling'] }).done(function () {
        });
    </script>
}