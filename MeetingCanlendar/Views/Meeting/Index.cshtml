@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id='calendar'></div>
<div class='calendarList'></div>
@section scripts{
    <script type="text/javascript">
        var currentLangCode = 'zh-cn';
        var currentDate = new Date();
        var initEvents = [];
        $(document).ready(function () {

            // build the language selector's options
            $.each($.fullCalendar.langs, function (langCode) {
                $('#lang-selector').append(
					$('<option/>')
						.attr('value', langCode)
						.prop('selected', langCode == currentLangCode)
						.text(langCode)
				);
            });

            // rerender the calendar when the selected option changes
            $('#lang-selector').on('change', function () {
                if (this.value) {
                    currentLangCode = this.value;
                    $('#calendar').fullCalendar('destroy');
                    renderCalendar();
                }
            });

            $.ajax({
                url: 'meeting/GetMeetingsByMonth',
                type: 'POST',
                dateType: 'json',
                async: false,
                data: { year: currentDate.getFullYear(), month: (currentDate.getMonth() + 1) }
            }).done(function (reuslt) {
                initEvents = reuslt;
            });

            function renderCalendar(initEvents) {
                $('#calendar').fullCalendar({
                    header: {
                        left: 'today',
                        center: 'prev title next',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    lang: currentLangCode,
                    isRTL: false,
                    selectable: true,
                    selectHelper: true,
                    weekNumbers: false,
                    editable: true,
                    firstDay: 1,
                    unselectAuto: false,
                    slotEventOverlap: false,
                    slotDuration: '00:15:00',
                    aspectRatio: 0,
                    loading: function (bool) {
                        $('#loading').toggle(bool);
                    },
                    select: function (start, end, jsEvent, view) {
                        if (view.name == "month") {
                            EventEditPanel({ start: start.add('hour', 7) }, jsEvent);
                        } else {
                            EventEditPanel({ start: start, end: end }, jsEvent);
                        }
                    },
                    eventClick: function (calEvent, jsEvent, view) {
                        EventEditPanel(calEvent, jsEvent);
                    },
                    eventDrop: function (event, jsEvent, ui, view) {
                        UpdateMeeting(event, ConvertEventToMeetingData(event));
                    },
                    eventResize: function (event, jsEvent, ui, view) {
                        UpdateMeeting(event, ConvertEventToMeetingData(event));
                    },
                    viewRender: function (view, element) {
                        var meetingList = CreateMeetingList($('#calendar').fullCalendar('clientEvents'));
                        
                        if (view.name == "month") {
                            $('#calendarList').remove();
                            meetingList.prependTo('.fc-content');
                            $('.fc-view').removeClass('fc-agendaDay');
                            $('.fc-button.fc-button-prev').text('上月');
                            $('.fc-button.fc-button-next').text('下月');
                        } else if (view.name == 'agendaWeek') {
                            $('#calendarList').remove();
                            meetingList.prependTo('.fc-content');
                            $('.fc-view').removeClass('fc-agendaDay');
                            $('.fc-button.fc-button-prev').text('上周');
                            $('.fc-button.fc-button-next').text('下周');
                        } else if (view.name == 'agendaDay') {
                            var currentSelDate = $('#calendar').fullCalendar('getDate');

                            if ($('#calendarList').length == 0) {
                                ShowSmallCanlendar(currentSelDate);
                            }
                            meetingList.prependTo('.calendar-list-content');
                            SetSmallCanlendarValue(currentSelDate);
                            $('.fc-button.fc-button-prev').text('昨天');
                            $('.fc-button.fc-button-next').text('明天');
                        }
                    },
                    events: initEvents
                    /*dayClick: function (date, jsEvent, view) {
                    if (view.name == "month") {
                    EventEditPanel({ start: date.add('hour', 7) }, jsEvent);
                    } else {
                    EventEditPanel({ start: date }, jsEvent);
                    }
                    }*/
                });
            }

            renderCalendar(initEvents);
        });

        function CreateMeetingList(events) {
            $('#meeting-list').remove();
            var eventList = $('<div id="meeting-list" />');
            var eventListUl = $('<ul class="ml-ul" />');
            var tick = 1;

            $.each(events, function (index, event) {
                var eveLi = $('<li class="ml-li ' + (tick % 2 == 0 ? 'li-even' : '') + '" id="ml-li-' + event.id + '" />').append('<span></span><span>' + event.title + '</span>');
                eveLi.click(function () {
                    eventListUl.find('li').removeClass('clicked');
                    $(this).addClass('clicked');
                });
                eventListUl.append(eveLi);
                tick++;
            });

            eventList.append(eventListUl);
            return eventList;
        }

        function ShowSmallCanlendar(defaultData) {
            $('.fc-view').addClass('fc-agendaDay');
            var calendarLsit = $('.calendarList').clone();

            calendarLsit.attr('id', 'calendarList')
			.append('<div class="calendar-list-header">'
			+ '<div class="currentDayDetail"><div class="cdt-day"></div>'
			+ '<div class="cdt-date"></div></div>'
			+ '<div class="smallCanlendar"></div><div class="clear"></div></div>')
			.append('<div class="calendar-list-content"></div>');

            calendarLsit.insertBefore('.fc-view');
            $('.smallCanlendar').fullCalendar({
                lang: currentLangCode,
                weekNumbers: false,
                firstDay: 1,
                header: false,
                dayClick: function (date, jsEvent, view) {
                    $('#calendar').fullCalendar('gotoDate', date);
                    $('.smallCanlendar').fullCalendar('select', date);
                }
            });
        }

        function SetSmallCanlendarValue(currentSelDate) {
            $('#calendarList').find('.cdt-day').text(currentSelDate.format('D'));
            $('#calendarList').find('.cdt-date').text(currentSelDate.format('YYYY年M月D日 星期dd'));
            $('.smallCanlendar').fullCalendar('select', currentSelDate, currentSelDate);
        }
        
        function EventEditPanel(curEvent, jsEvent) {
            $('body').editPanel('destroy');

            var eventStartTime = curEvent.start ? curEvent.start.clone() : moment();
            var positionsJSON = [];

            $.ajax({
                url: 'meeting/GetMeetingPositions',
                type: 'POST',
                dateType: 'json',
                async: false
            }).done(function (result) {
                positionsJSON = result;
            });

            $('body').editPanel({
                id: curEvent.id,
                title: curEvent.title,
                position: curEvent.position,
                people: curEvent.people,
                start: eventStartTime,
                level: curEvent.level,
                memo: curEvent.memo,
                end: curEvent.end ? curEvent.end.clone() : eventStartTime.clone().add('hours', 1),
                jsEvent: jsEvent,
                positions: positionsJSON,
                submit: function (e, data) {
                    var source = ConvertEventToMeetingData(data);

                    UpdateMeeting(curEvent, source);
                },
                remove: function (e, data) {
                    $.post('meeting/DeleteMeeting', { id: data.id }, function (result) {
                        if (result.type == 0) {
                            alert(result.msg);
                        } else if (result.type == 1) {
                            $('#calendar').fullCalendar('removeEvents', data.id);
                        }
                    });
                },
                close: function () {
                    $('#calendar').fullCalendar('unselect');
                }
            });
        }

        function UpdateMeeting(curEvent, source) {
            $.post('meeting/EditMeeting', { 'source': JSON.stringify(source) }, function (result) {
                if (result.type == 0) {
                    $('#calendar').fullCalendar('unselect');
                    alert(result.msg);
                } else if (result.type == 1) {
                    if (source.id == -1) {
                        $('#calendar').fullCalendar('renderEvent', result.data, true);
                    } else {
                        curEvent.title = result.data.title;
                        curEvent.start = result.data.start;
                        curEvent.end = result.data.end;
                        curEvent.position = result.data.position;
                        curEvent.memo = result.data.memo;
                        curEvent.level = result.data.level;
                        curEvent.people = result.data.people;

                        $('#calendar').fullCalendar('updateEvent', curEvent);
                    }

                    $('#calendar').fullCalendar('unselect');
                }
            });
        }

        function ConvertEventToMeetingData(data) {
            return {
                id: data.id ? data.id : -1,
                m_title: data.title,
                m_position: data.position,
                m_start_time: data.start.format('YYYY-MM-DD HH:mm'),
                m_end_time: data.end.format('YYYY-MM-DD HH:mm'),
                m_level: data.level,
                m_people: data.people,
                m_memo: data.memo
            };
        }

    </script>
}